import discord
from discord.ext import commands

from .views import JumpView
from .exceptions import NotInHelpForum
from .settings import (HELP_FORUM_ID,
                       INITIAL_MESSAGE_EMBED_IMAGE_URL,
                       HELPER_ROLE_ID) 
from .checkers import (no_thread_solution_yet,
                       thread_owner_only)


class HelpCog(discord.Cog):
    ticket_command = discord.SlashCommandGroup(
        name="ticket",
        checks=[commands.check_any(
            commands.has_role(HELPER_ROLE_ID),
            commands.is_owner()
        )]
    )

    @discord.Cog.listener()
    async def on_thread_create(self, thread: discord.Thread):
        if not thread.parent_id == HELP_FORUM_ID:
            return

        embed = discord.Embed(
            title="–ü–æ—Å—Ç —Å–æ–∑–¥–∞–Ω!",
            description=(
                "–í —Å–∫–æ—Ä–æ–º –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞ –Ω–µ–≥–æ –¥–∞–¥—É—Ç –æ—Ç–≤–µ—Ç, –ø—Ä–æ—Å–∏–º –Ω–µ–º–Ω–æ–≥–æ –ø–æ–¥–æ–∂–¥–∞—Ç—å.\n"
                "üìù –í—ã –º–æ–∂–µ—Ç–µ –ø–æ–º–µ—Ç–∏—Ç—å –æ—Ç–≤–µ—Ç –∫–∞–∫ —Ä–µ—à–µ–Ω–∏–µ –Ω–∞–∂–∞–≤ **–ü–ö–ú** –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ -> "
                f"\"–ü—Ä–∏–ª–æ–∂–µ–Ω–∏—è\" -> \"{HelpCog.mark_as_answer.name}\""
            ),
            image=INITIAL_MESSAGE_EMBED_IMAGE_URL,
            color=0x4334eb,
        )

        await thread.send(embed=embed)

    @discord.message_command(name="–ü–æ–º–µ—Ç–∏—Ç—å –∫–∞–∫ —Ä–µ—à–µ–Ω–∏–µ ‚úÖ")
    @no_thread_solution_yet()
    @thread_owner_only()
    async def mark_as_answer(self, ctx: discord.ApplicationContext, message: discord.Message):
        if message.author.bot:
            error_embed = discord.Embed(
                title="‚ùå –û—à–∏–±–∫–∞",
                description="–ù–µ–ª—å–∑—è –ø–æ–º–µ—á–∞—Ç—å –æ—Ç–≤–µ—Ç –±–æ—Ç–∞ –∫–∞–∫ —Ä–µ—à–µ–Ω–∏–µ –≤–æ–ø—Ä–æ—Å–∞"
            )
            return await ctx.respond(embed=error_embed)
        
        if message.author.id == ctx.author.id:
            # –û—Ç–≤–µ—Ç–∏–ª –Ω–∞ —Å–≤–æ–π –∂–µ –≤–æ–ø—Ä–æ—Å
            success_embed = discord.Embed(
                title="‚úÖ –£—Å–ø–µ—à–Ω–æ",
                description=(
                    "–í—ã –ø–æ–º–µ—Ç–∏–ª–∏ —Å–≤–æ–π –æ—Ç–≤–µ—Ç –∫–∞–∫ —Ä–µ—à–µ–Ω–∏–µ –≤–æ–ø—Ä–æ—Å–∞.\n"
                    ""
                ),
                fields=[
                    discord.EmbedField(
                        name="–ü–æ–∫–∞–∑–∞—Ç—å —Ä–µ—à–µ–Ω–∏–µ",
                        value=f"[–ù–∞–∂–∞—Ç—å —Å—é–¥–∞]({message.jump_url})"
                    )
                ]
            )

            await ctx.respond(embed=success_embed)
            await message.add_reaction("‚úÖ")
            starting_message = await anext(ctx.channel.history(
                after=ctx.channel.created_at,
                limit=1,
                oldest_first=True
            ))
            return await starting_message.edit(view=JumpView(message.jump_url))

        # –ü–æ–º–µ—Ç–∏–ª –∫–∞–∫ –æ—Ç–≤–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –¥—Ä—É–≥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. TODO
        await ctx.respond("–ü–æ–º–µ—Ç–∏–ª, –∫–∞–∫ –æ—Ç–≤–µ—Ç")
        await message.add_reaction("‚úÖ")

    @ticket_command.command(description="–ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤—ã–≤–∞–µ—Ç —Ç–µ–∫—É—â–∏–π –≤–æ–ø—Ä–æ—Å")
    async def rename(self, ctx: discord.ApplicationContext, new_name: str):
        await ctx.channel.edit(name=new_name)
        await ctx.respond(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {ctx.author.mention} –∏–∑–º–µ–Ω–∏–ª –Ω–∞–∑–≤–∞–Ω–∏–µ")

    @ticket_command.command(description="–ó–∞–∫—Ä—ã–≤–∞–µ—Ç —Ç–µ–∫—É—â–∏–π –≤–æ–ø—Ä–æ—Å")
    async def archive(self, ctx: discord.ApplicationContext):
        await ctx.respond(f"–í–æ–ø—Ä–æ—Å –∑–∞–∫—Ä—ã—Ç")
        await ctx.channel.archive(locked=True)
    
    @ticket_command.command(description="–û—Ç–∫—Ä—ã–≤–∞–µ—Ç –∑–∞–Ω–æ–≥–æ —Ç–µ–∫—É—â–∏–π –≤–æ–ø—Ä–æ—Å")
    async def unarchive(self, ctx: discord.ApplicationContext):
        await ctx.channel.unarchive()
        await ctx.respond(f"–í–æ–ø—Ä–æ—Å –æ—Ç–∫—Ä—ã—Ç")

    def cog_check(self, ctx: discord.ApplicationContext):
        if (
            ctx.channel.type != discord.ChannelType.public_thread or
            ctx.channel.parent_id != HELP_FORUM_ID
        ):
            raise NotInHelpForum
        return True
    
    async def cog_command_error(self, ctx: discord.ApplicationContext, error: Exception):
        if isinstance(error, NotInHelpForum):
            await ctx.respond(
                f"–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –º–æ–∂–µ—Ç –±—ã—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∞ —Ç–æ–ª—å–∫–æ –≤ <#{HELP_FORUM_ID}>",
                ephemeral=True
            )
        elif isinstance(error, commands.MissingRole):
            await ctx.respond(
                "–≠—Ç—É –∫–æ–º–∞–Ω–¥—É –º–æ–∂–µ—Ç –≤—ã–∑—ã–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä "
                f"–∏ –ª—é–¥–∏ —Å —Ä–æ–ª—å—é <@&{error.missing_role}>",
                ephemeral=True
            )
        elif isinstance(error, commands.CheckAnyFailure):
            await ctx.respond(
                "–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π –Ω–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã",
                ephemeral=True
            )